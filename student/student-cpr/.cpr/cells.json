{"cells": [{"cell_type": "code", "execution_count": 7, "metadata": {}, "outputs": [{"name": "stdout", "output_type": "stream", "text": ["simulations run 10000\n", "mean of number of pull 34.1274\n"]}], "source": ["N = 10_000\n", "starting_socks = 2* [i for i in range(N_SOCKS)]\n", "n_pulls = []\n", "\n", "for n in range(N):\n", "    \n", "    socks = starting_socks.copy()\n", "    pulled = []\n", "    \n", "    for pull_i in range(N_SOCKS + 1):\n", "        \n", "        ind = numpy.random.randint(0, len(socks) - 1)\n", "        \n", "        _sock = socks.pop(ind)\n", "        \n", "        if _sock in pulled:\n", "            n_pulls.append(pull_i + 1)\n", "            break\n", "        else:\n", "            pulled.append(_sock)\n", "            \n", "print(f'simulations run {len(n_pulls)}')\n", "print(f'mean of number of pull {numpy.mean(n_pulls)}')"]}, {"cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [{"data": {"text/plain": ["Text(0.5, 1.0, 'Historgram of n_pulls for 365 socks')"]}, "execution_count": 19, "metadata": {}, "output_type": "execute_result"}, {"data": {"image/png": "\n", "text/plain": ["<Figure size 432x288 with 1 Axes>"]}, "metadata": {"needs_background": "light"}, "output_type": "display_data"}], "source": ["from matplotlib import pyplot as plt\n", "plt.hist(n_pulls, bins=50)\n", "plt.vlines(numpy.mean(n_pulls),0,600)\n", "plt.title(f'Historgram of n_pulls for {N_SOCKS} socks')"]}, {"cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [{"data": {"text/plain": ["Text(0.5, 1.0, 'Historgram of n_pulls for 365 socks')"]}, "execution_count": 19, "metadata": {}, "output_type": "execute_result"}, {"data": {"image/png": "\n", "text/plain": ["<Figure size 432x288 with 1 Axes>"]}, "metadata": {"needs_background": "light"}, "output_type": "display_data"}], "source": ["from matplotlib import pyplot as plt\n", "plt.hist(n_pulls, bins=50)\n", "plt.vlines(numpy.mean(n_pulls),0,600)\n", "plt.title(f'Historgram of n_pulls for {N_SOCKS} socks')"]}, {"cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [{"data": {"text/plain": ["Text(0.5, 1.0, 'Historgram of n_pulls for 365 socks')"]}, "execution_count": 19, "metadata": {}, "output_type": "execute_result"}, {"data": {"image/png": "\n", "text/plain": ["<Figure size 432x288 with 1 Axes>"]}, "metadata": {"needs_background": "light"}, "output_type": "display_data"}], "source": ["from matplotlib import pyplot as plt\n", "plt.hist(n_pulls, bins=50)\n", "plt.vlines(numpy.mean(n_pulls),0,600)\n", "plt.title(f'Historgram of n_pulls for {N_SOCKS} socks')"]}, {"cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [{"data": {"text/plain": ["Text(0.5, 1.0, 'Historgram of n_pulls for 365 socks')"]}, "execution_count": 19, "metadata": {}, "output_type": "execute_result"}, {"data": {"image/png": "\n", "text/plain": ["<Figure size 432x288 with 1 Axes>"]}, "metadata": {"needs_background": "light"}, "output_type": "display_data"}], "source": ["from matplotlib import pyplot as plt\n", "plt.hist(n_pulls, bins=50)\n", "plt.vlines(numpy.mean(n_pulls),0,600)\n", "plt.title(f'Historgram of n_pulls for {N_SOCKS} socks')"]}, {"cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [{"data": {"text/plain": ["Text(0.5, 1.0, 'Historgram of n_pulls for 365 socks')"]}, "execution_count": 19, "metadata": {}, "output_type": "execute_result"}, {"data": {"image/png": "\n", "text/plain": ["<Figure size 432x288 with 1 Axes>"]}, "metadata": {"needs_background": "light"}, "output_type": "display_data"}], "source": ["from matplotlib import pyplot as plt\n", "plt.hist(n_pulls, bins=50)\n", "plt.vlines(numpy.mean(n_pulls),0,600)\n", "plt.title(f'Historgram of n_pulls for {N_SOCKS} socks')"]}, {"cell_type": "code", "execution_count": 26, "metadata": {}, "outputs": [{"data": {"text/plain": ["'bellsbellsbells'"]}, "execution_count": 26, "metadata": {}, "output_type": "execute_result"}], "source": ["# answer cell\n", "jingle = 'bells'\n", "jingle*3 "]}, {"cell_type": "code", "execution_count": 26, "metadata": {}, "outputs": [{"data": {"text/plain": ["'bellsbellsbells'"]}, "execution_count": 26, "metadata": {}, "output_type": "execute_result"}], "source": ["# answer cell\n", "jingle = 'bells'\n", "jingle*3 "]}, {"cell_type": "code", "execution_count": 26, "metadata": {}, "outputs": [{"data": {"text/plain": ["'bellsbellsbells'"]}, "execution_count": 26, "metadata": {}, "output_type": "execute_result"}], "source": ["# answer cell\n", "jingle = 'bells'\n", "jingle*3 "]}, {"cell_type": "code", "execution_count": 7, "metadata": {}, "outputs": [{"name": "stdout", "output_type": "stream", "text": ["simulations run 10000\n", "mean of number of pull 34.1274\n"]}], "source": ["import numpy\n", "N_SOCKS = 365\n", "N = 10_000\n", "starting_socks = 2* [i for i in range(N_SOCKS)]\n", "n_pulls = []\n", "\n", "for n in range(N):\n", "    \n", "    socks = starting_socks.copy()\n", "    pulled = []\n", "    \n", "    for pull_i in range(N_SOCKS + 1):\n", "        \n", "        ind = numpy.random.randint(0, len(socks) - 1)\n", "        \n", "        _sock = socks.pop(ind)\n", "        \n", "        if _sock in pulled:\n", "            n_pulls.append(pull_i + 1)\n", "            break\n", "        else:\n", "            pulled.append(_sock)\n", "            \n", "print(f'simulations run {len(n_pulls)}')\n", "print(f'mean of number of pull {numpy.mean(n_pulls)}')"]}, {"cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [{"data": {"text/plain": ["Text(0.5, 1.0, 'Historgram of n_pulls for 365 socks')"]}, "execution_count": 19, "metadata": {}, "output_type": "execute_result"}, {"data": {"image/png": "\n", "text/plain": ["<Figure size 432x288 with 1 Axes>"]}, "metadata": {"needs_background": "light"}, "output_type": "display_data"}], "source": ["from matplotlib import pyplot as plt\n", "plt.hist(n_pulls, bins=50)\n", "plt.vlines(numpy.mean(n_pulls),0,600)\n", "plt.title(f'Historgram of n_pulls for {N_SOCKS} socks')"]}, {"cell_type": "code", "execution_count": 39, "metadata": {}, "outputs": [], "source": ["# more stuff"]}, {"cell_type": "code", "execution_count": 39, "metadata": {}, "outputs": [], "source": ["# more stuff"]}, {"cell_type": "code", "execution_count": 39, "metadata": {}, "outputs": [], "source": ["# more stuff"]}, {"cell_type": "code", "execution_count": 39, "metadata": {}, "outputs": [], "source": ["# gleason"]}, {"cell_type": "code", "execution_count": 39, "metadata": {}, "outputs": [], "source": ["# jerry rice"]}, {"cell_type": "code", "execution_count": 39, "metadata": {}, "outputs": [], "source": ["# jerry rice"]}, {"cell_type": "code", "execution_count": 39, "metadata": {}, "outputs": [], "source": ["# jerry rice"]}, {"cell_type": "code", "execution_count": 17, "metadata": {}, "outputs": [], "source": ["# jerry rice"]}, {"cell_type": "code", "execution_count": 17, "metadata": {}, "outputs": [], "source": ["# breakfast commit"]}, {"cell_type": "code", "execution_count": 3, "metadata": {}, "outputs": [], "source": ["# omlettes"]}, {"cell_type": "code", "execution_count": 6, "metadata": {}, "outputs": [], "source": ["# sausage omlettes"]}, {"cell_type": "code", "execution_count": 6, "metadata": {}, "outputs": [], "source": ["# trumbull"]}, {"cell_type": "code", "execution_count": 9, "metadata": {}, "outputs": [], "source": ["# 2019"]}, {"cell_type": "code", "execution_count": 11, "metadata": {}, "outputs": [], "source": ["# 2020"]}, {"cell_type": "code", "execution_count": 13, "metadata": {}, "outputs": [], "source": ["# Quiet!"]}, {"cell_type": "code", "execution_count": 15, "metadata": {}, "outputs": [], "source": ["# Matilda"]}, {"cell_type": "code", "execution_count": 17, "metadata": {}, "outputs": [], "source": ["# Trumbull!!!"]}, {"cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [], "source": ["# Ms Honey ;)"]}, {"cell_type": "code", "execution_count": 3, "metadata": {}, "outputs": [], "source": ["# My New ANSWER...9876243"]}]}