{"cells": [{"cell_type": "code", "execution_count": 7, "metadata": {}, "outputs": [{"name": "stdout", "output_type": "stream", "text": ["simulations run 10000\n", "mean of number of pull 34.1274\n"]}], "source": ["N = 10_000\n", "starting_socks = 2* [i for i in range(N_SOCKS)]\n", "n_pulls = []\n", "\n", "for n in range(N):\n", "    \n", "    socks = starting_socks.copy()\n", "    pulled = []\n", "    \n", "    for pull_i in range(N_SOCKS + 1):\n", "        \n", "        ind = numpy.random.randint(0, len(socks) - 1)\n", "        \n", "        _sock = socks.pop(ind)\n", "        \n", "        if _sock in pulled:\n", "            n_pulls.append(pull_i + 1)\n", "            break\n", "        else:\n", "            pulled.append(_sock)\n", "            \n", "print(f'simulations run {len(n_pulls)}')\n", "print(f'mean of number of pull {numpy.mean(n_pulls)}')"]}, {"cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [{"data": {"text/plain": ["Text(0.5, 1.0, 'Historgram of n_pulls for 365 socks')"]}, "execution_count": 19, "metadata": {}, "output_type": "execute_result"}, {"data": {"image/png": "\n", "text/plain": ["<Figure size 432x288 with 1 Axes>"]}, "metadata": {"needs_background": "light"}, "output_type": "display_data"}], "source": ["from matplotlib import pyplot as plt\n", "plt.hist(n_pulls, bins=50)\n", "plt.vlines(numpy.mean(n_pulls),0,600)\n", "plt.title(f'Historgram of n_pulls for {N_SOCKS} socks')"]}, {"cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [{"data": {"text/plain": ["Text(0.5, 1.0, 'Historgram of n_pulls for 365 socks')"]}, "execution_count": 19, "metadata": {}, "output_type": "execute_result"}, {"data": {"image/png": "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\n", "text/plain": ["<Figure size 432x288 with 1 Axes>"]}, "metadata": {"needs_background": "light"}, "output_type": "display_data"}], "source": ["from matplotlib import pyplot as plt\n", "plt.hist(n_pulls, bins=50)\n", "plt.vlines(numpy.mean(n_pulls),0,600)\n", "plt.title(f'Historgram of n_pulls for {N_SOCKS} socks')"]}, {"cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [{"data": {"text/plain": ["Text(0.5, 1.0, 'Historgram of n_pulls for 365 socks')"]}, "execution_count": 19, "metadata": {}, "output_type": "execute_result"}, {"data": {"image/png": "\n", "text/plain": ["<Figure size 432x288 with 1 Axes>"]}, "metadata": {"needs_background": "light"}, "output_type": "display_data"}], "source": ["from matplotlib import pyplot as plt\n", "plt.hist(n_pulls, bins=50)\n", "plt.vlines(numpy.mean(n_pulls),0,600)\n", "plt.title(f'Historgram of n_pulls for {N_SOCKS} socks')"]}, {"cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [{"data": {"text/plain": ["Text(0.5, 1.0, 'Historgram of n_pulls for 365 socks')"]}, "execution_count": 19, "metadata": {}, "output_type": "execute_result"}, {"data": {"image/png": "\n", "text/plain": ["<Figure size 432x288 with 1 Axes>"]}, "metadata": {"needs_background": "light"}, "output_type": "display_data"}], "source": ["from matplotlib import pyplot as plt\n", "plt.hist(n_pulls, bins=50)\n", "plt.vlines(numpy.mean(n_pulls),0,600)\n", "plt.title(f'Historgram of n_pulls for {N_SOCKS} socks')"]}, {"cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [{"data": {"text/plain": ["Text(0.5, 1.0, 'Historgram of n_pulls for 365 socks')"]}, "execution_count": 19, "metadata": {}, "output_type": "execute_result"}, {"data": {"image/png": "\n", "text/plain": ["<Figure size 432x288 with 1 Axes>"]}, "metadata": {"needs_background": "light"}, "output_type": "display_data"}], "source": ["from matplotlib import pyplot as plt\n", "plt.hist(n_pulls, bins=50)\n", "plt.vlines(numpy.mean(n_pulls),0,600)\n", "plt.title(f'Historgram of n_pulls for {N_SOCKS} socks')"]}, {"cell_type": "code", "execution_count": 26, "metadata": {}, "outputs": [{"data": {"text/plain": ["'bellsbellsbells'"]}, "execution_count": 26, "metadata": {}, "output_type": "execute_result"}], "source": ["# answer cell\n", "jingle = 'bells'\n", "jingle*3 "]}, {"cell_type": "code", "execution_count": 26, "metadata": {}, "outputs": [{"data": {"text/plain": ["'bellsbellsbells'"]}, "execution_count": 26, "metadata": {}, "output_type": "execute_result"}], "source": ["# answer cell\n", "jingle = 'bells'\n", "jingle*3 "]}, {"cell_type": "code", "execution_count": 26, "metadata": {}, "outputs": [{"data": {"text/plain": ["'bellsbellsbells'"]}, "execution_count": 26, "metadata": {}, "output_type": "execute_result"}], "source": ["# answer cell\n", "jingle = 'bells'\n", "jingle*3 "]}, {"cell_type": "code", "execution_count": 7, "metadata": {}, "outputs": [{"name": "stdout", "output_type": "stream", "text": ["simulations run 10000\n", "mean of number of pull 34.1274\n"]}], "source": ["import numpy\n", "N_SOCKS = 365\n", "N = 10_000\n", "starting_socks = 2* [i for i in range(N_SOCKS)]\n", "n_pulls = []\n", "\n", "for n in range(N):\n", "    \n", "    socks = starting_socks.copy()\n", "    pulled = []\n", "    \n", "    for pull_i in range(N_SOCKS + 1):\n", "        \n", "        ind = numpy.random.randint(0, len(socks) - 1)\n", "        \n", "        _sock = socks.pop(ind)\n", "        \n", "        if _sock in pulled:\n", "            n_pulls.append(pull_i + 1)\n", "            break\n", "        else:\n", "            pulled.append(_sock)\n", "            \n", "print(f'simulations run {len(n_pulls)}')\n", "print(f'mean of number of pull {numpy.mean(n_pulls)}')"]}, {"cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [{"data": {"text/plain": ["Text(0.5, 1.0, 'Historgram of n_pulls for 365 socks')"]}, "execution_count": 19, "metadata": {}, "output_type": "execute_result"}, {"data": {"image/png": "\n", "text/plain": ["<Figure size 432x288 with 1 Axes>"]}, "metadata": {"needs_background": "light"}, "output_type": "display_data"}], "source": ["from matplotlib import pyplot as plt\n", "plt.hist(n_pulls, bins=50)\n", "plt.vlines(numpy.mean(n_pulls),0,600)\n", "plt.title(f'Historgram of n_pulls for {N_SOCKS} socks')"]}, {"cell_type": "code", "execution_count": 39, "metadata": {}, "outputs": [], "source": ["# more stuff"]}, {"cell_type": "code", "execution_count": 39, "metadata": {}, "outputs": [], "source": ["# more stuff"]}, {"cell_type": "code", "execution_count": 39, "metadata": {}, "outputs": [], "source": ["# more stuff"]}, {"cell_type": "code", "execution_count": 39, "metadata": {}, "outputs": [], "source": ["# gleason"]}, {"cell_type": "code", "execution_count": 39, "metadata": {}, "outputs": [], "source": ["# jerry rice"]}, {"cell_type": "code", "execution_count": 39, "metadata": {}, "outputs": [], "source": ["# jerry rice"]}, {"cell_type": "code", "execution_count": 39, "metadata": {}, "outputs": [], "source": ["# jerry rice"]}, {"cell_type": "code", "execution_count": 17, "metadata": {}, "outputs": [], "source": ["# jerry rice"]}, {"cell_type": "code", "execution_count": 17, "metadata": {}, "outputs": [], "source": ["# breakfast commit"]}, {"cell_type": "code", "execution_count": 3, "metadata": {}, "outputs": [], "source": ["# omlettes"]}, {"cell_type": "code", "execution_count": 6, "metadata": {}, "outputs": [], "source": ["# sausage omlettes"]}, {"cell_type": "code", "execution_count": 6, "metadata": {}, "outputs": [], "source": ["# trumbull"]}, {"cell_type": "code", "execution_count": 9, "metadata": {}, "outputs": [], "source": ["# 2019"]}, {"cell_type": "code", "execution_count": 11, "metadata": {}, "outputs": [], "source": ["# 2020"]}, {"cell_type": "code", "execution_count": 13, "metadata": {}, "outputs": [], "source": ["# Quiet!"]}, {"cell_type": "code", "execution_count": 15, "metadata": {}, "outputs": [], "source": ["# Matilda"]}, {"cell_type": "code", "execution_count": 17, "metadata": {}, "outputs": [], "source": ["# Trumbull!!!"]}, {"cell_type": "code", "execution_count": 19, "metadata": {}, "outputs": [], "source": ["# Ms Honey ;)"]}, {"cell_type": "code", "execution_count": 3, "metadata": {}, "outputs": [], "source": ["# My New ANSWER...9876243"]}, {"cell_type": "code", "execution_count": 3, "metadata": {}, "outputs": [{"data": {"text/plain": ["[1, 2, 3]"]}, "execution_count": 3, "metadata": {}, "output_type": "execute_result"}], "source": ["# Let it snow\n", "# LEt it snow!\n", "# MAke it so...\n", "[1,2,3]"]}, {"cell_type": "code", "execution_count": 6, "metadata": {}, "outputs": [{"data": {"text/plain": ["28"]}, "execution_count": 6, "metadata": {}, "output_type": "execute_result"}], "source": ["#MMErr...MAN!!!\n", "#Mer...MAHNN\n", "27+1"]}, {"cell_type": "code", "execution_count": 8, "metadata": {}, "outputs": [{"data": {"text/plain": ["17"]}, "execution_count": 8, "metadata": {}, "output_type": "execute_result"}], "source": ["# Hey Teng!\n", "17"]}, {"cell_type": "code", "execution_count": 8, "metadata": {}, "outputs": [{"data": {"text/plain": ["17"]}, "execution_count": 8, "metadata": {}, "output_type": "execute_result"}], "source": ["# Hey Teng!\n", "17"]}, {"cell_type": "code", "execution_count": 8, "metadata": {}, "outputs": [{"data": {"text/plain": ["17"]}, "execution_count": 8, "metadata": {}, "output_type": "execute_result"}], "source": ["# Hey Teng!\n", "17"]}, {"cell_type": "code", "execution_count": 8, "metadata": {}, "outputs": [{"data": {"text/plain": ["17"]}, "execution_count": 8, "metadata": {}, "output_type": "execute_result"}], "source": ["# Hey Teng!\n", "17"]}, {"cell_type": "code", "execution_count": 7, "metadata": {}, "outputs": [{"name": "stdout", "output_type": "stream", "text": ["Hey Grace!\n"]}], "source": ["print('Hey Grace!')"]}, {"cell_type": "code", "execution_count": 2, "metadata": {}, "outputs": [{"name": "stdout", "output_type": "stream", "text": ["simulations run 10000\n", "mean of number of pull 33.7011\n"]}], "source": ["import numpy\n", "N_SOCKS = 365\n", "N = 10_000\n", "starting_socks = 2* [i for i in range(N_SOCKS)]\n", "n_pulls = []\n", "\n", "for n in range(N):\n", "    \n", "    socks = starting_socks.copy()\n", "    pulled = []\n", "    \n", "    for pull_i in range(N_SOCKS + 1):\n", "        \n", "        ind = numpy.random.randint(0, len(socks) - 1)\n", "        \n", "        _sock = socks.pop(ind)\n", "        \n", "        if _sock in pulled:\n", "            n_pulls.append(pull_i + 1)\n", "            break\n", "        else:\n", "            pulled.append(_sock)\n", "            \n", "print(f'simulations run {len(n_pulls)}')\n", "print(f'mean of number of pull {numpy.mean(n_pulls)}')"]}, {"cell_type": "code", "execution_count": 4, "metadata": {}, "outputs": [{"data": {"image/png": "\n", "text/plain": ["<Figure size 432x288 with 1 Axes>"]}, "metadata": {"needs_background": "light"}, "output_type": "display_data"}], "source": ["from matplotlib import pyplot as plt\n", "plt.hist(n_pulls, bins=50)\n", "plt.vlines(numpy.mean(n_pulls),0,600)\n", "plt.title(f'Historgram of n_pulls for {N_SOCKS} socks');\n", "plt.show()"]}]}