CellPullRequest:

	
Overview / Main Points
------------------------

	
	- need a way to merge only certain cells, otherwise all the progress is overwritten
	
		- unless, we can create a merge strategy which does UNION on exisiting work and new additions
		
	- idea: create a "cool" guid in the cell where you want to receive the teachers-pr. This can be function in CPR-module. Once you have that unique string, in the notebook, merge can navigate and find it. e.g.:
	
		---------------
		In[ ] cpr.public_code(2)
		---------------
		Out[ ] awesome-aardvark-2345
		----------------
		In [ ] 
		----------------
		
			-> now we'll try to merge just below awesome-aardvark-2345 on the students notebook
			
	- Stages of Dev:
		1.) teacher able to push out code to students
		2.) students are able to deliver teacher their code
		
		- nice to haves:
			- most projects will involve a datasets so that will need to be included in the 
			- each student can have one main repo where teacher can sync with students progress
			
		- other things to consider:
			- need to .gitignore large datasets, and ipynb_checkpoints, otherwise it will be a nightmare merge
			- just add/commit the notebook in progress
		
Todo:
-------------------------

	12.14
	
	[x] setup the master git repo for the project
	
	[x] setup the local git-server 
		->resides cpr/remote/main  
		->called remote local in student-cpr and teacher-cpr
		detailed:
			in remote/: >mkdir main
						>cd main
						>git init
						>git checkout -b dummy
			
			in student-cpr/ and teacher-cpr:
						>git remote add local /c/Users/wsutt/Desktop/cpr/remote/main
						
			from teacher-cpr/
						>git push local master
						(now, remote should be sync'd with teacher)
						
			to verify sync, in remote/main/:
						>git checkout master
						>ls  (should see all files)
						>git checkout dummy (need to switch back to enable pushing to master)
						
			now sync up student, in student-cpr:
						>git add .
						>git commit -m "add/committing everything tp allow pull"
						>git pull local master
						
	
	[ ] setup a testing framework 
	
		[ ] how will we drive changes? maybe just writing the "resultant" json from python instead of using a webdriver on browser to automate jupyter?
	
	[ ] setup the module for cpr class
	
	[ ] setup a skeleton for subprocess to git
	
	[ ] investigate libraries for python-git
	
	[ ] create some examples of merge conflicts
	
	[ ] how to do git merge without git-pull?
	
	[ ] try executing window.location.realod() from python
		- need to import Ipython.display.Javascript
		
		
	
	[ ] copy the pattern in an example nb_ensensions
	
		- or freeload of exisitng installed extensions like nb_conda
		
		- or from user-built extensions
		
		notes:
			extensions live both in:
				- lib/site-packages
					(with an __init__.py directing jupyter)
				
				- Anaconda3/share/nbextensions/ 
				
			-> I can't dummy duplicate an extension yet
		
		[ ] Get some extensions from here and figure out how they work!
				
				https://github.com/ipython-contrib/jupyter_contrib_nbextensions
				
		
		
	[x] verify the reload command process
	
		the pop-up
		<div class="modal-footer"><button class="btn btn-default btn-sm btn-warning" data-dismiss="modal">Reload</button><button class="btn btn-default btn-sm" data-dismiss="modal">Cancel</button><button class="btn btn-default btn-sm btn-danger save-confirm-btn" data-dismiss="modal">Overwrite</button></div>
		
		Error message when merge fails:
		Unreadable Notebook: C:\Users\wsutt\Desktop\cpr\student\student-cpr\book1.ipynb NotJSONError('Notebook does not appear to be JSON: \'{\\n "cells": [\\n {\\n "cell_type": "m...')
		
			[x] compare diffs b/w teacher's book1.ipynb and students' book1.ipynb
				after failed merge
				
				in misc/saved-files as book1-conflicts.ipynb, book1-=good.ipynb
				>git diff --no-index book1-good.ipynb book1-conflicts.ipynb
				
				-> looks like "<<<<<<<<HEAD" is throwing off json
				-> also there was a duplicate 'source' item from teacher writing into cell and student having it blank.
				
	
		[x] find the javascript sources for jupyter
		-> window.location.realod() works to view the newly inserted code, but is clunky and doesn't keep the cursor in position.
		
		main.min.js in a downloaded page at line 45233:
		
			if (that._changed_on_disk_dialog !== null) {
                            // update save callback on the confirmation button
                            that._changed_on_disk_dialog.find('.save-confirm-btn').click(_save);
                            //Rebind Click Event on Reload
                            that._changed_on_disk_dialog.find('.btn-warning').click(function () {window.location.reload()});
                            // redisplay existing dialog
                            that._changed_on_disk_dialog.modal('show');
                        } else {
                          // create new dialog
                          that._changed_on_disk_dialog = dialog.modal({
                            notebook: that,
                            keyboard_manager: that.keyboard_manager,
                            title: i18n.msg._("Notebook changed"),
                            body: i18n.msg._("The notebook file has changed on disk since the last time we opened or saved it. "
                                  + "Do you want to overwrite the file on disk with the version open here, or load "
                                  + "the version on disk (reload the page)?"),
                            buttons: {
                                Reload: {
                                    class: 'btn-warning',
                                    click: function() {
                                        window.location.reload();
                                    }
                                },
							Cancel: {},
                                Overwrite: {
                                    class: 'btn-danger save-confirm-btn',
                                    click: function () {
                                        _save();
                                    }
                                },
                            }
							
			[x] better option for window reloading?
			
				-> at the moment no: none of these are callable from console
					the reason is that naturally these methods get called from some object deep in the call stack, which allows `this` within the method to be a `Notebook` object
			
				main.min.js line 45641 sets cursor location
				
					if (this.ncells() === 0) {
						this.insert_cell_below('code');
						this.edit_mode(0);
					} else {
						this.select(0);
						this.handle_command_mode(this.get_cell(0));
					}
					
				part of:
					Notebook.prototype.load_notebook  Notebook.prototype.load_notebook_success

					
				[x] execute those from console
				
					>IPython.Notebook.prototype.load_notebook()
					
						caught in debugger: static/notebook/js/notebook/js/notebook.js
						
						Notebook.prototype.load_notebook = function (notebook_path) {
							this.notebook_path = notebook_path;
						
						where:
						notebook_path = 'student/student-cpr/book1-fix.ipynb'
					
					>IPython.Notebook.prototype.load_notebook('student/student-cpr/book1-fix.ipynb')
					>requirejs("notebook/js/notebook").Notebook.prototype.load_notebook("student/student-cpr/book1-fix.ipynb")
					
					 $.ajax({
						  url: "/static/notebook/js/main.min.js",
						  dataType: "script",
						  success: true
						});
					$.ajax({
					  url: "/static/notebook/js/main.min.js?v=1bc4ae6ca8730320ff059b16de698691",
					  dataType: "script",
					  success: true
					});
					<script src="/static/notebook/js/main.min.js?v=1bc4ae6ca8730320ff059b16de698691" type="text/javascript" charset="utf-8"></script>

	
	other questions:
		- how to do an immediate refresh to see new code
			-> can just refresh page, but...
			-> is there an IPython method for this "Reload" action?
			-> what if sutdent adds more work before merge completes
			-> how to return cursor to appropriate cell?
			
			https://stackoverflow.com/questions/32237275/save-an-ipython-notebook-programmatically-from-within-itself
			
				looks like using the following pseudo code should work:
				>from Ipython.display import Javascript
				>Javascript(Ipython.notebook.reload() [sic])
				
		- does this work across OS's with meta-data?
		
	
	12.12
	
	[x] set up a dummy remote repo
	[x] open up two terminals, two notebooks, two local repos
	
	[x] understand the delay in RELOAD for notebook
		-> refreshing the page seems to work
	
	[ ] how well do changes to meta-data within a cell work to merge?
		[x] demonstrate some meta-data changing -> need to save from notebook
	
	[x] build a script for add, commit push
	[ ] build a script to add, commit, pull
	
	[ ] try a git checkout -- book1.ipynb while live
	
	[ ] setup an offline working copy
		>git clone --local ../remote/example-repo
		>cd example-repo
		>git status
		>git remote get-url origin
			/mnt/c/Users/wsutt/Desktop/cpr/misc/../remote/example-repo/
	
	[x] surface some client issues by changing students notebook before the pull
	
	[x] can i run an .sh file in windows terminal?
		->yes, but it shells out and closes too quickly to read
		[x] perhaps it can work for git? -> yes
		
	[x] do i have any extensions installed in base?
		-> a few like conda installed extensions
		


Detailed Notes:
-----------------------------
		
		12.14
		
		+ examples of git operations while notebook is live.
		
			"""
			error: Your local changes to the following files would be overwritten by merge:
				book1.ipynb
				Please commit your changes or stash them before you merge.
				Aborting
			"""
		
		+ how to clone from local? doesn't work as easily as adding a local remote
		
			-> you can just push to a newly init'd folder
		
		+ how do 
		
		+ how to push to a local repo:
			
			This one works:
			example-repo-branch
			in this one, we do:
				(in remote)>git checkout -b dummy
				(in local) >git push local-branch master
				-> now pushed changes are visible in remote once we:
				(in remote) >git checkout master
				but changes aren't visible in dummy branch
				
			
			This didn't really work:
			example-repo (turned to "bare" but files disappear, but log works)
			
			remote: error: refusing to update checked out branch: refs/heads/master
			remote: error: By default, updating the current branch in a non-bare repository
			remote: is denied, because it will make the index and work tree inconsistent
			remote: with what you pushed, and will require 'git reset --hard' to match
			remote: the work tree to HEAD.
			
			troubleshooting:	https://stackoverflow.com/questions/2816369/git-push-error-remote-rejected-master-master-branch-is-currently-checked
		
				in remote do: git config --bool core.bare true
				
			example-repo-branch
		
		12.12
		
		+ even without any actual changes to students, `git diff --stat` returns this...
			"""
			 warning: LF will be replaced by CRLF in book1.ipynb.
			 The file will have its original line endings in your working directory
			"""
			
			- but trying to commit that fails:			
				"""
				nothing to commit, working tree clean
				"""
		
		+ merging fails when student+teacher both make changes, and student's chnages are not committed.
		
				error: Your local changes to the following files would be overwritten by merge:
					book1.ipynb
				Please commit your changes or stash them before you merge.
				Aborting
				Updating 05085cf..e81cbeb
		
			also:
			
				Your branch is behind 'origin/master' by 1 commit, and can be fast-forwarded.
				
				? what is "fast-forwarding" ?
				
		+ Looks like student's branch get's stuck behind teacher's once he starts merging.
		
			"""
			Your branch is ahead of 'origin/master' by 3 commits.		
			"""
	
	
	
	
	
	
	
	