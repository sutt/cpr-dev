CellPullRequest:

	
Overview / Main Points
------------------------

	
	- need a way to merge only certain cells, otherwise all the progress is overwritten
	
		- unless, we can create a merge strategy which does UNION on exisiting work and new additions
		
	- idea: create a "cool" guid in the cell where you want to receive the teachers-pr. This can be function in CPR-module. Once you have that unique string, in the notebook, merge can navigate and find it. e.g.:
	
		---------------
		In[ ] cpr.public_code(2)
		---------------
		Out[ ] awesome-aardvark-2345
		----------------
		In [ ] 
		----------------
		
			-> now we'll try to merge just below awesome-aardvark-2345 on the students notebook
			
	- Stages of Dev:
		1.) teacher able to push out code to students
		2.) students are able to deliver teacher their code
		
		- nice to haves:
			- most projects will involve a datasets so that will need to be included in the 
			- each student can have one main repo where teacher can sync with students progress
			
		- other things to consider:
			- need to .gitignore large datasets, and ipynb_checkpoints, otherwise it will be a nightmare merge
			- just add/commit the notebook in progress
		
Todo:
-------------------------

	12.14
	
	[x] setup the master git repo for the project
	
	[x] setup the local git-server 
		->resides cpr/remote/main  
		->called remote local in student-cpr and teacher-cpr
		detailed:
			in remote/: >mkdir main
						>cd main
						>git init
						>git checkout -b dummy
			
			in student-cpr/ and teacher-cpr:
						>git remote add local /c/Users/wsutt/Desktop/cpr/remote/main
						
			from teacher-cpr/
						>git push local master
						(now, remote should be sync'd with teacher)
						
			to verify sync, in remote/main/:
						>git checkout master
						>ls  (should see all files)
						>git checkout dummy (need to switch back to enable pushing to master)
						
			now sync up student, in student-cpr:
						>git add .
						>git commit -m "add/committing everything tp allow pull"
						>git pull local master
						
	
	[ ] setup a testing framework 
	
	[ ] setup the module for cpr class
	
	[ ] setup a skeleton for subprocess to git
	
	[ ] investigate libraries for python-git
	
	[ ] create some examples of merge conflicts
	
	[ ] how to do git merge without git-pull?
	
	other questions:
		
	
	12.12
	
	[x] set up a dummy remote repo
	[x] open up two terminals, two notebooks, two local repos
	
	[x] understand the delay in RELOAD for notebook
		-> refreshing the page seems to work
	
	[ ] how well do changes to meta-data within a cell work to merge?
		[x] demonstrate some meta-data changing -> need to save from notebook
	
	[x] build a script for add, commit push
	[ ] build a script to add, commit, pull
	
	[ ] try a git checkout -- book1.ipynb while live
	
	[ ] setup an offline working copy
		>git clone --local ../remote/example-repo
		>cd example-repo
		>git status
		>git remote get-url origin
			/mnt/c/Users/wsutt/Desktop/cpr/misc/../remote/example-repo/
	
	[x] surface some client issues by changing students notebook before the pull
	
	[x] can i run an .sh file in windows terminal?
		->yes, but it shells out and closes too quickly to read
		[x] perhaps it can work for git? -> yes
		
	[ ] do i have any extensions installed in base?
		


Detailed Notes:
-----------------------------
		
		12.14
		
		+ examples of git operations while notebook is live.
		
			"""
			error: Your local changes to the following files would be overwritten by merge:
				book1.ipynb
				Please commit your changes or stash them before you merge.
				Aborting
			"""
		
		+ how to clone from local? doesn't work as easily as adding a local remote
		
			-> you can just push to a newly init'd folder
		
		+ how do 
		
		+ how to push to a local repo:
			
			This one works:
			example-repo-branch
			in this one, we do:
				(in remote)>git checkout -b dummy
				(in local) >git push local-branch master
				-> now pushed changes are visible in remote once we:
				(in remote) >git checkout master
				but changes aren't visible in dummy branch
				
			
			This didn't really work:
			example-repo (turned to "bare" but files disappear, but log works)
			
			remote: error: refusing to update checked out branch: refs/heads/master
			remote: error: By default, updating the current branch in a non-bare repository
			remote: is denied, because it will make the index and work tree inconsistent
			remote: with what you pushed, and will require 'git reset --hard' to match
			remote: the work tree to HEAD.
			
			troubleshooting:	https://stackoverflow.com/questions/2816369/git-push-error-remote-rejected-master-master-branch-is-currently-checked
		
				in remote do: git config --bool core.bare true
				
			example-repo-branch
		
		12.12
		
		+ even without any actual changes to students, `git diff --stat` returns this...
			"""
			 warning: LF will be replaced by CRLF in book1.ipynb.
			 The file will have its original line endings in your working directory
			"""
			
			- but trying to commit that fails:			
				"""
				nothing to commit, working tree clean
				"""
		
		+ merging fails when student+teacher both make changes, and student's chnages are not committed.
		
				error: Your local changes to the following files would be overwritten by merge:
					book1.ipynb
				Please commit your changes or stash them before you merge.
				Aborting
				Updating 05085cf..e81cbeb
		
			also:
			
				Your branch is behind 'origin/master' by 1 commit, and can be fast-forwarded.
				
				? what is "fast-forwarding" ?
				
		+ Looks like student's branch get's stuck behind teacher's once he starts merging.
		
			"""
			Your branch is ahead of 'origin/master' by 3 commits.		
			"""
	
	
	
	
	
	
	
	